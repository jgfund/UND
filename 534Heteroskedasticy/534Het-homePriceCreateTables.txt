-- USER SQL
CREATE USER "C##HET" IDENTIFIED BY JFA2
DEFAULT TABLESPACE "USERS" 
TEMPORARY TABLESPACE "TEMP" 
ACCOUNT UNLOCK ;


-- QUOTAS

-- ROLES
GRANT CREATE SESSION TO C##HET;
GRANT DBA TO C##HET;

-- SYSTEM PRIVILEGES

-------------------------------------------------------------------------------
--Create HOMEPRICEV10 Table
  CREATE TABLE "C##HET"."HOMEPRICEV10" 
   ("HID" NUMBER(10,0) NOT NULL ENABLE,
   	"ID" NUMBER(10,0), 
	"PRICE" NUMBER(10,2),
	"FLOOR" NUMBER(5,0),
	"LOT" NUMBER(2,0),
	"BATH" NUMBER(2,1),
	"BED" NUMBER(2,1),
	"BATHBED" NUMBER(3,1),
	"YEAR" NUMBER(4,0),
	"AGE" NUMBER(3,2),
	"AGESQ" NUMBER(4,2),
	"GAR" NUMBER(2,0),
	"STATUS" VARCHAR2(10 CHAR),
	"DAC" NUMBER(2,0),
	"SCHOOL" VARCHAR2(10 CHAR),
	"DED" NUMBER(2,0),
	"DHA" NUMBER(2,0),
	"DAD" NUMBER(2,0),
	"DCR" NUMBER(2,0),
	"DPA" NUMBER(2,0), 
		
	CONSTRAINT "PK_HPTENID" PRIMARY KEY ("HID") 
	USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
	STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 
	PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 
	BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) 
	TABLESPACE "USERS" ENABLE 
  ) 
 SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"
  ;

----------------------------------------------------------------------------------------
CREATE SEQUENCE  "C##HET"."HPTEN_SEQ"  MINVALUE 1 MAXVALUE 
	999999999999999999999999 INCREMENT BY 1 START WITH 77 CACHE 20  NOORDER  NOCYCLE  NOKEEP 
	NOSCALE  GLOBAL ;

CREATE EDITIONABLE TRIGGER "C##HET"."HPTEN_TRIG" BEFORE INSERT ON C##HET.HOMEPRICEV10 
FOR EACH ROW
DECLARE
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.HID IS NULL THEN
    SELECT HPTEN_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN
      --get the max indentity value from the table
      SELECT NVL(max(HID),0) INTO v_newVal FROM HOMEPRICEV10;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT HPTEN_SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
     -- assign the value from the sequence to emulate the identity column
   :new.HID := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "C##HET"."HPTEN_TRIG" ENABLE;
--------------------------------------------------------------------------------
--Create HPRICE1 Table
  CREATE TABLE "C##HET"."HPRICE1" 
   ("PID" NUMBER(10,0) NOT NULL ENABLE,
   	"PRICE" NUMBER(10,2),
	"ASSESS" NUMBER(10,2),
	"BDRMS" NUMBER(10,2),
	"LOTSIZE" NUMBER(10,0),
	"SQRFT" NUMBER(5,0),
	"COLONIAL" NUMBER(2,0),
	"LPRICE" NUMBER(10,8),
	"LASSESS" NUMBER(10,8),
	"LLOTSIZE" NUMBER(10,8),
	"LSQRFT" NUMBER(10,8), 

		
	CONSTRAINT "PK_HPONEID" PRIMARY KEY ("PID") USING INDEX 
	
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT) 
  TABLESPACE "USERS" ENABLE 
  ) 
 SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
  NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"
  ;

------------------------------------------------------------------------------------

CREATE SEQUENCE  "C##HET"."HPONE_SEQ"  MINVALUE 1 MAXVALUE 
	999999999999999999999999 INCREMENT BY 1 START WITH 89 CACHE 20 NOORDER  NOCYCLE  NOKEEP 
	NOSCALE  GLOBAL ;

CREATE EDITIONABLE TRIGGER "C##HET"."HPONE_TRIG" BEFORE INSERT ON C##HET.HPRICE1 
FOR EACH ROW
DECLARE
v_newVal NUMBER(12) := 0;
v_incval NUMBER(12) := 0;
BEGIN
  IF INSERTING AND :new.PID IS NULL THEN
    SELECT HPONE_SEQ.NEXTVAL INTO v_newVal FROM DUAL;
    -- If this is the first time this table have been inserted into (sequence == 1)
    IF v_newVal = 1 THEN
      --get the max indentity value from the table
      SELECT NVL(max(PID),0) INTO v_newVal FROM HPRICE1;
      v_newVal := v_newVal + 1;
      --set the sequence to that value
      LOOP
           EXIT WHEN v_incval>=v_newVal;
           SELECT HPONE_SEQ.nextval INTO v_incval FROM dual;
      END LOOP;
    END IF;
     -- assign the value from the sequence to emulate the identity column
   :new.PID := v_newVal;
  END IF;
END;
/
ALTER TRIGGER "C##HET"."HPONE_TRIG" ENABLE;

----------------------------------------------------------------------------------
--HOMEPRICEV10 DATA
--C:\Oracle>sqlldr C##HET C:\Users\jfras\OneDrive\UND\534AppliedEcon\Datasets\Load_homepricev10.ctl
--Password:


----------------------------------------------------------------------------------
--HPRICE1 DATA
--C:\Oracle>sqlldr C##HET C:\Users\jfras\OneDrive\UND\534AppliedEcon\Datasets\Load_hprice1.ctl
--Password:

----------------------------------------------------------------------------------
 
--CREATE HOMEPRICEV10 DATASHEET VIEW (All Fields)-----------------------------------------
 CREATE FORCE EDITIONABLE VIEW "C##HET"."HPTENSUMMARYQUERY" 
 ("HID","ID","PRICE","FLOOR","LOT",
 "BATH","BED","BATHBED","YEAR","AGE",
 "AGESQ","GAR","STATUS","DAC","SCHOOL",
 "DED","DHA","DAD","DCR","DPA")
  
 AS 
 SELECT 
 C##HET.HOMEPRICEV10.HID, 
 C##HET.HOMEPRICEV10.ID,
 C##HET.HOMEPRICEV10.PRICE,  
 C##HET.HOMEPRICEV10.FLOOR,
 C##HET.HOMEPRICEV10.LOT,
 C##HET.HOMEPRICEV10.BATH,
 C##HET.HOMEPRICEV10.BED,
 C##HET.HOMEPRICEV10.BATHBED,
 C##HET.HOMEPRICEV10.YEAR,
 C##HET.HOMEPRICEV10.AGE,
 C##HET.HOMEPRICEV10.AGESQ,
 C##HET.HOMEPRICEV10.GAR,
 C##HET.HOMEPRICEV10.STATUS,
 C##HET.HOMEPRICEV10.DAC,
 C##HET.HOMEPRICEV10.SCHOOL,
 C##HET.HOMEPRICEV10.DED,
 C##HET.HOMEPRICEV10.DHA,
 C##HET.HOMEPRICEV10.DAD,
 C##HET.HOMEPRICEV10.DCR,
 C##HET.HOMEPRICEV10.DPA
 
 FROM C##HET.HOMEPRICEV10
 ;
 
--CREATE HPRICE1 VIEW(QUERY)--------------------------------------------
CREATE FORCE EDITIONABLE VIEW "C##HET"."HPRICEONEQUERY" 
 ("PID","PRICE","ASSESS","BDRMS","LOTSIZE",
 "SQRFT","COLONIAL","LPRICE","LASSESS",
 "LLOTSIZE","LSQRFT") 
 AS 
 SELECT 
 C##HET.HPRICE1.PID,
 C##HET.HPRICE1.PRICE,
 C##HET.HPRICE1.ASSESS,
 C##HET.HPRICE1.BDRMS,
 C##HET.HPRICE1.LOTSIZE,
 C##HET.HPRICE1.SQRFT,
 C##HET.HPRICE1.COLONIAL,
 C##HET.HPRICE1.LPRICE,
 C##HET.HPRICE1.LASSESS,
 C##HET.HPRICE1.LLOTSIZE,
 C##HET.HPRICE1.LSQRFT
 FROM C##HET.HPRICE1 
;

--CREATE HPRICE1 VIEW(QUERY)--------------------------------------------
CREATE FORCE EDITIONABLE VIEW "C##HET"."HPRICEAVGQUERY" 
 ("PRICE","BDRMS","AvgPrice") 
 AS 
 SELECT 
 C##HET.HPRICE1.PRICE,
 C##HET.HPRICE1.BDRMS,
 AVG(C##HET.HPRICE1.PRICE)
 
 FROM C##HET.HPRICE1  
 GROUP BY C##HET.HPRICE1.BDRMS, C##HET.HPRICE1.PRICE
;